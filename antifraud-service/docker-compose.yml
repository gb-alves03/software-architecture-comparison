version: "3.8"

services:
  mongodb:
    image: mongo:6.0
    container_name: mongodb
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    volumes:
      - mongo_data:/data/db
    networks:
      - app-network

  mongo-express:
    image: mongo-express:1.0.0-alpha.4
    container_name: mongo-express
    restart: always
    ports:
      - "8082:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_SERVER: mongodb
    depends_on:
      - mongodb
    networks:
      - app-network

  redis:
    image: redis:7.2
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli ping | grep PONG" ]
      interval: 5s
      timeout: 5s
      retries: 20
      start_period: 20s
    command: redis-server --appendonly yes
    networks:
      - app-network

  fraud-service:
    image: banking/antifraud-service:1.0.0
    container_name: fraud-service
    restart: on-failure
    depends_on:
      redis:
        condition: service_healthy
      mongodb:
        condition: service_started
    ports:
      - "8081:8081"
    environment:
      SPRING_DATA_MONGODB_URI: mongodb://root:example@mongodb:27017/fraud-db?authSource=admin
    networks:
      - app-network

  k6:
    image: grafana/k6
    container_name: k6
    volumes:
      - ./load-tests:/scripts
    working_dir: /scripts
    entrypoint: [ "k6" ]
    networks:
      - app-network
    depends_on:
      - fraud-service

volumes:
  mongo_data:
  redis_data:

networks:
  app-network:
    driver: bridge
